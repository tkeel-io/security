{
  "swagger": "2.0",
  "info": {
    "description": "Auth OpenAPI",
    "title": "Auth",
    "contact": {
      "name": "tKeel",
      "url": "https://tKeel.io/",
      "email": "auth@tkeel.com"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "https://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "version": "0.1.0",
    "x-taggroups": []
  },
  "paths": {
    "/v1/entity/token/valid": {
      "post": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "Entity"
        ],
        "summary": "valid a entity token",
        "operationId": "TokenValid",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1.TokenValidIn"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/v1/entity/{entity_type}/{entity_id}/token": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "Entity"
        ],
        "summary": "get a entity token",
        "operationId": "Token",
        "parameters": [
          {
            "type": "string",
            "description": "EntityType",
            "name": "entity_type",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Entity's ID",
            "name": "entity_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "invalid period( seconds )",
            "name": "expires_in",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/v1/oauth/authenticate": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "Oauth"
        ],
        "operationId": "Authenticate",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/v1/oauth/authorize": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "Oauth"
        ],
        "operationId": "Authorize",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/v1/oauth/on_code": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "Oauth"
        ],
        "operationId": "OnCode",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/v1/oauth/token": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "Oauth"
        ],
        "operationId": "Token",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/v1/rbac/permission/check": {
      "post": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "RBAC"
        ],
        "summary": "delete a role in tenant",
        "operationId": "PermissionCheck",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1.PermissionCheck"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/v1/rbac/{tenant_id}/roles": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "RBAC"
        ],
        "summary": "Get role list in tenant",
        "operationId": "RolesInDomain",
        "parameters": [
          {
            "type": "string",
            "description": "tenant's ID",
            "name": "tenant_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "RBAC"
        ],
        "summary": " Add a role in tenant ",
        "operationId": "AddRoleInDomain",
        "parameters": [
          {
            "type": "string",
            "description": "tenant's ID",
            "name": "tenant_id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1.AddPermissionIn"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        }
      }
    },
    "/v1/rbac/{tenant_id}/roles/{role}": {
      "delete": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "RBAC"
        ],
        "summary": "delete a role in tenant",
        "operationId": "DeleteRoleInDomain",
        "parameters": [
          {
            "type": "string",
            "description": "tenant's ID",
            "name": "tenant_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "role'ID",
            "name": "role",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/v1/rbac/{tenant_id}/users/roles": {
      "post": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "RBAC"
        ],
        "summary": "add roles for users",
        "operationId": "AddRoleToUser",
        "parameters": [
          {
            "type": "string",
            "description": "tenant's ID",
            "name": "tenant_id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1.AddRoleInDomainIn"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/v1/rbac/{tenant_id}/users/{user_id}/permissions": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "RBAC"
        ],
        "summary": "get user permissions ",
        "operationId": "UserPermissions",
        "parameters": [
          {
            "type": "string",
            "description": "tenant's ID",
            "name": "tenant_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "user's ID",
            "name": "user_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/v1/rbac/{tenant_id}/users/{user_id}/roles/{role}": {
      "delete": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "RBAC"
        ],
        "summary": "delete a role for user",
        "operationId": "DeleteRoleOnUser",
        "parameters": [
          {
            "type": "string",
            "description": "tenant's ID",
            "name": "tenant_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "user's ID",
            "name": "user_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "role",
            "name": "role",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/v1/rbac/{tenant_id}/{role}/permissions": {
      "post": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "RBAC"
        ],
        "summary": "add permission for role",
        "operationId": "AddPermissionInRole",
        "parameters": [
          {
            "type": "string",
            "description": "tenant's ID",
            "name": "tenant_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "role'ID",
            "name": "role",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1.AddPermissionIn"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "RBAC"
        ],
        "summary": "delete a permission for role ",
        "operationId": "DeletePermissionInRole",
        "parameters": [
          {
            "type": "string",
            "description": "tenant's ID",
            "name": "tenant_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "role'ID",
            "name": "role",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "permission object",
            "name": "permission_object",
            "in": "query"
          },
          {
            "type": "string",
            "description": "permission action",
            "name": "permission_action",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/v1/tenant": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "Tenant"
        ],
        "summary": "get tenants",
        "operationId": "Query",
        "parameters": [
          {
            "type": "string",
            "name": "tenant_id",
            "in": "query"
          },
          {
            "type": "string",
            "name": "title",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/*dao.Tenant"
              }
            }
          }
        }
      },
      "post": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "Tenant"
        ],
        "summary": " Create a tenant",
        "operationId": "Create",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1.TenantCreteIn"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "schema": {
              "$ref": "#/definitions/v1.TenantCreateOut"
            }
          }
        }
      }
    },
    "/v1/tenant/users": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "Tenant"
        ],
        "summary": "get users",
        "operationId": "UserQuery",
        "responses": {
          "200": {
            "description": "ok",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/dao.User"
              }
            }
          }
        }
      },
      "post": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "Tenant"
        ],
        "summary": "create a user",
        "operationId": "UserCreate",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1.UserCreateIn"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "schema": {
              "$ref": "#/definitions/dao.User"
            }
          }
        }
      }
    },
    "/v1/tenant/users/{user_id}": {
      "delete": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "Tenant"
        ],
        "summary": "delete a  users",
        "operationId": "UserDelete",
        "parameters": [
          {
            "type": "string",
            "name": "user_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        }
      }
    },
    "/v1/tenant/{tenant_id}": {
      "delete": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "Tenant"
        ],
        "summary": "delete a tenant",
        "operationId": "Delete",
        "parameters": [
          {
            "type": "string",
            "description": "tenant's ID",
            "name": "tenant_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        }
      }
    }
  },
  "definitions": {
    "*dao.Tenant": {},
    "dao.User": {
      "required": [
        "user_id",
        "external_id",
        "tenant_id",
        "username",
        "nick_name",
        "avatar",
        "email"
      ],
      "properties": {
        "avatar": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "external_id": {
          "type": "string"
        },
        "nick_name": {
          "type": "string"
        },
        "tenant_id": {
          "type": "integer",
          "format": "int32"
        },
        "user_id": {
          "type": "string"
        },
        "username": {
          "type": "string"
        }
      }
    },
    "v1.AddPermissionIn": {
      "required": [
        "permission_object",
        "permission_action"
      ],
      "properties": {
        "permission_action": {
          "type": "string"
        },
        "permission_object": {
          "type": "string"
        }
      }
    },
    "v1.AddRoleInDomainIn": {
      "required": [
        "role"
      ],
      "properties": {
        "role": {
          "type": "string"
        }
      }
    },
    "v1.PermissionCheck": {
      "required": [
        "user_id",
        "permission_object",
        "permission_action"
      ],
      "properties": {
        "permission_action": {
          "type": "string"
        },
        "permission_object": {
          "type": "string"
        },
        "user_id": {
          "type": "string"
        }
      }
    },
    "v1.TenantCreateOut": {
      "required": [
        "tenant_id",
        "title",
        "remark",
        "admin"
      ],
      "properties": {
        "admin": {
          "$ref": "#/definitions/v1.UserCreateIn"
        },
        "remark": {
          "type": "string"
        },
        "tenant_id": {
          "type": "integer",
          "format": "int32"
        },
        "title": {
          "type": "string"
        }
      }
    },
    "v1.TenantCreteIn": {
      "required": [
        "title",
        "Remark",
        "admin"
      ],
      "properties": {
        "Remark": {
          "type": "string"
        },
        "admin": {
          "$ref": "#/definitions/v1.UserCreateIn"
        },
        "title": {
          "type": "string"
        }
      }
    },
    "v1.TokenValidIn": {
      "required": [
        "entity_token"
      ],
      "properties": {
        "entity_token": {
          "type": "string"
        }
      }
    },
    "v1.UserCreateIn": {
      "required": [
        "tenant_id",
        "username",
        "password",
        "nick_name",
        "avatar",
        "email"
      ],
      "properties": {
        "avatar": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "nick_name": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "tenant_id": {
          "type": "integer",
          "format": "int32"
        },
        "username": {
          "type": "string"
        }
      }
    }
  },
  "securityDefinitions": {
    "jwt": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    }
  },
  "security": [
    {
      "jwt": []
    }
  ]
}